import {withSourceFile}  from "@leight/generator-server";
import {normalize}       from "node:path";
import {type IGenerator} from "../../api";

export interface IGeneratorClientFormParams {
    entities: IGeneratorClientFormParams.IEntity[];
}

export namespace IGeneratorClientFormParams {
    export interface IEntity {
        /**
         * Base name exported (used to name all exported objects)
         */
        name: string;
        /**
         * Required package imports
         */
        packages: IPackages;
    }

    export interface IPackages {
        /**
         * Package used to import all schema-related types (ISource implementation, IWhere and so on, can be generated by @leight).
         */
        schema: string;
    }
}

export const generatorClientForm: IGenerator<IGeneratorClientFormParams> = async (
    {
        folder,
        barrel,
        params: {entities}
    }) => {
    const file = withSourceFile();



    file.saveTo({
        file: normalize(`${process.cwd()}/${folder}/ClientForm.tsx`),
        barrel,
    });
};
