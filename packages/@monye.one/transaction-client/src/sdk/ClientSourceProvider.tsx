/**
	This is a file generated by MCP (managed code pattern) approach.
    
    So, please, DO NOT modify this file as it would get re-generated and you would be f*cked up.
 */
import {
	type ISourceProps,
	Source
} from "@leight/source-client";
import {
	type IQueryProviderProps,
	QueryProvider
} from "@leight/query-client";
import {
	type ITransactionSourceSchema,
	TransactionSchema
} from "@monye.one/transaction";
import {type FC} from "react";
import {
	TransactionSourceStore,
	TransactionSortStore
} from "./ClientStore";
import {trpc} from "@monye.one/trpc-client";

export interface ITransactionSourceProps extends ISourceProps<ITransactionSourceSchema> {
}

export interface ITransactionQueryProviderProps extends IQueryProviderProps<ITransactionSourceSchema> {
}

export const TransactionSource:FC<ITransactionSourceProps> = props => {
    return <Source<ITransactionSourceSchema>
        schema={TransactionSchema}
        SourceProvider={TransactionSourceStore.Provider}
        useSortState={TransactionSortStore.useState}
        useSourceQuery={trpc.transaction.source.query.useQuery}
		{...props}
    />;
};
export const TransactionQueryProvider:FC<ITransactionQueryProviderProps> = props => {
    return <QueryProvider<ITransactionSourceSchema>
        SortProvider={TransactionSortStore.Provider}
        useCountQuery={trpc.transaction.source.count.useQuery}
		{...props}
    />;
};